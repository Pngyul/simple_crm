<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns="http://www.springframework.org/schema/beans" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.2.xsd 
							http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.2.xsd 
							http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.2.xsd 
							http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.2.xsd ">

	<!-- <context:component-scan base-package="com.pngyul.*"></context:component-scan> -->

	<!-- 配置事务管理器 -->
	<bean name="transactionManager"
		class="org.springframework.orm.hibernate5.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory"></property>
	</bean>
	<!-- 配置通知 -->
	<tx:advice transaction-manager="transactionManager" id="txAdvice">
		<tx:attributes>
			<tx:method name="save*" isolation="REPEATABLE_READ"
				propagation="REQUIRED" read-only="false" />
			<tx:method name="persist*" isolation="REPEATABLE_READ"
				propagation="REQUIRED" read-only="false" />
			<tx:method name="update*" isolation="REPEATABLE_READ"
				propagation="REQUIRED" read-only="false" />
			<tx:method name="modify*" isolation="REPEATABLE_READ"
				propagation="REQUIRED" read-only="false" />
			<tx:method name="delete*" isolation="REPEATABLE_READ"
				propagation="REQUIRED" read-only="false" />
			<tx:method name="remove*" isolation="REPEATABLE_READ"
				propagation="REQUIRED" read-only="false" />
			<tx:method name="get*" isolation="REPEATABLE_READ"
				propagation="REQUIRED" read-only="true" />
			<tx:method name="find*" isolation="REPEATABLE_READ"
				propagation="REQUIRED" read-only="true" />

		</tx:attributes>
	</tx:advice>
	<!-- 配置织入 -->
	<aop:config>
		<!-- 配置切點 -->
		<aop:pointcut expression="execution(* com.pngyul.service.impl.*ServiceImpl.*(..))"
			id="txPc" />
		<!-- 配置切面 -->
		<aop:advisor advice-ref="txAdvice" pointcut-ref="txPc" />
	</aop:config>

	<!-- 读取db.properties文件 -->
	<context:property-placeholder location="classpath:db.properties" />
	<!-- 配置3cp0连接池 -->
	<bean name="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
		<property name="jdbcUrl" value="${jdbc.jdbcUrl}"></property>
		<property name="driverClass" value="${jdbc.driverClass}"></property>
		<property name="user" value="${jdbc.user}"></property>
		<property name="password" value="${jdbc.password}"></property>
	</bean>
	<!-- 配置action -->
	<bean name="userAction" class="com.pngyul.web.action.UserAction"  scope="prototype">
		<property name="us" ref="userService"></property>
	</bean>
	<bean name="customerAction" class="com.pngyul.web.action.CustomerAction" scope="prototype">
		<property name="cs" ref="customerService"></property>
	</bean>
	<bean name="baseDictAction" class="com.pngyul.web.action.BaseDictAction"  scope="prototype">
		<property name="bds" ref="baseDictService"></property>
	</bean>
	<bean name="linkManAction" class="com.pngyul.web.action.LinkManAction"  scope="prototype">
		<property name="lms" ref="linkManService"></property>
	</bean>
	<bean name="saleVisitAction" class="com.pngyul.web.action.SaleVisitAction"  scope="prototype">
		<property name="svs" ref="saleVisitService"></property>
	</bean>
	<!-- 给 dao 注入 SessionFactory -->
	<bean name="userDao" class="com.pngyul.dao.impl.UserDaoImpl">
		<property name="sessionFactory" ref="sessionFactory"></property>
	</bean>
	<bean name="customerDao" class="com.pngyul.dao.impl.CustomerDaoImpl">
		<property name="sessionFactory" ref="sessionFactory"></property>
	</bean>
	<bean name="baseDictDao" class="com.pngyul.dao.impl.BaseDictDaoImpl">
		<property name="sessionFactory" ref="sessionFactory"></property>
	</bean>
	<bean name="linkManDao" class="com.pngyul.dao.impl.LinkManDaoImpl">
		<property name="sessionFactory" ref="sessionFactory"></property>
	</bean>
	<bean name="saleVisitDao" class="com.pngyul.dao.impl.SaleVisitDaoImpl">
		<property name="sessionFactory" ref="sessionFactory"></property>
	</bean>
	<!-- 配置service -->
	<bean name="userService" class="com.pngyul.service.impl.UserServiceImpl">
		<property name="ud" ref="userDao"></property>
	</bean>
	<bean name="customerService" class="com.pngyul.service.impl.CustomerServiceImpl">
		<property name="cd" ref="customerDao"></property>
	</bean>
	<bean name="baseDictService" class="com.pngyul.service.impl.BaseDictServiceImpl">
		<property name="bdd" ref="baseDictDao"></property>
	</bean>
	<bean name="linkManService" class="com.pngyul.service.impl.LinkManServiceImpl">
		<property name="lmd" ref="linkManDao"></property>
	</bean>
	<bean name="saleVisitService" class="com.pngyul.service.impl.SaleVisitServiceImpl">
		<property name="svd" ref="saleVisitDao"></property>
	</bean>
	<!-- 将SessionFactory配置到spring容器中 -->
	<!-- 加载配置方案1:仍然使用外部的hibernate.cfg.xml配置信息 -->
	<!-- <bean name="sessionFactory" class="org.springframework.orm.hibernate5.LocalSessionFactoryBean"> 
		<property name="configLocation" value="classpath:hibernate.cfg.xml" ></property> 
		</bean> -->
	<!-- 加载配置方案2:在spring配置中放置hibernate配置信息 -->
	<bean name="sessionFactory"
		class="org.springframework.orm.hibernate5.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource"></property>
		<property name="hibernateProperties">
			<props>

				<!-- 必选配置 -->
				<!-- <prop key="hibernate.connection.driver_class" >com.mysql.jdbc.Driver</prop> 
					<prop key="hibernate.connection.url" >jdbc:mysql:///crm</prop> <prop key="hibernate.connection.username" 
					>root</prop> <prop key="hibernate.connection.password" >root</prop> -->
				<prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop>
				<!-- 可选配置 -->
				<prop key="hibernate.show_sql">true</prop>
				<prop key="hibernate.format_sql">true</prop>
				<prop key="hibernate.hbm2ddl.auto">update</prop>
			</props>

		</property>
		<!-- 引入orm元数据,指定orm元数据所在的包路径,spring会自动读取包中的所有配置 -->
		<property name="mappingDirectoryLocations" value="classpath:com/pngyul/domain"></property>
	</bean>
	
</beans>